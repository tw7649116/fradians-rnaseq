outd=/home/ygalachyants/axSA_assemblies/drap
cd reads && mkdir -p raw cleaned normalized && cd -
cd reads/raw && ls -l ../../../trinity/reads/ | cut -d' ' -f 11 | xargs -I% -n1 ln -s % ./
tempd=/store/$USER/drap && cd $tempd && mkdir -p reads/raw reads/cleaned reads/normalized
######################################################################
#Clean reads
######################################################################
export PATH=/home/ygalachyants/tools/assembly/qc/bbmap:$HOME/local/compile/pigz-2.4:$PATH
cd rsync -qL $outd/reads/raw/*bz2 $tempd/reads/raw
# for p in `ls ../raw/ | xargs -n1 bash -c 'echo ${0%[12].fastq.bz2}' | uniq`; do
#     cmd="bbduk.sh in=$tempd/reads/raw/${p}#.fastq.bz2 out=stdout.fq \
#         ref=adapters \
#         k=27 mink=16 ktrim=r hdist=2 tbo tpe ordered \
#         2>${p}.bbduk.1st.pass \
#         | bbduk.sh in=stdin.fq int=t out=stdout.fq \
#             ref=adapters \
#             k=23 ktrim=r mink=10 hdist=1 hdist2=0 qtrim=rl trimq=15 minlen=36 tbo tpe ordered \
#             2>${p}.bbduk.2nd.pass \
#         | bbduk.sh in=stdin.fq int=t out=$tempd/reads/cleaned/clean_strong.${p}#.fq.gz \
#             k=31 ref=artifacts,phix ordered cardinality ow \
#             2>${p}.bbduk.3rd.pass"
#     echo $cmd
#     eval $cmd
# done
cd $tempd/reads/cleaned
for p in `ls $tempd/reads/raw/ | xargs -n1 bash -c 'echo ${0%[12].fastq.bz2}' | uniq`; do
    o=${p##*/}
    cmd="bbduk.sh in=${p}#.fastq.bz2 out=stdout.fq \
        ref=adapters \
        k=27 mink=16 ktrim=r hdist=2 tbo tpe ordered \
        2>$tempd/reads/cleaned/${o}.bbduk.1st.pass \
        | bbduk.sh in=stdin.fq int=t out=stdout.fq \
            ref=adapters \
            k=23 ktrim=r mink=10 hdist=1 hdist2=0 qtrim=rl trimq=10 minlen=25 tbo tpe ordered \
            2>$tempd/reads/cleaned/${o}.bbduk.2nd.pass \
        | bbduk.sh in=stdin.fq int=t out=$tempd/reads/cleaned/${o}#.fq.gz \
            k=31 ref=artifacts,phix ordered cardinality ow \
            2>$tempd/reads/cleaned/${o}.bbduk.3rd.pass"
    echo $cmd
    eval $cmd
done
rsync -qL $tempd/reads/cleaned/* /$outd/reads/cleaned

######################################################################
#Normalize reads for assemblies
######################################################################
mkdir $tempd/reads/normalized && cd $tempd/reads/normalized
for p in `ls $tempd/reads/cleaned/*gz | xargs -n1 bash -c 'f=${0%[12].fq.gz}; echo ${f##*/}' | uniq`; do
    o=${p#clean_default.}
    cmd="bbnorm.sh in=$tempd/reads/cleaned/$p#.fq.gz out=stdout.fq target=100 2>$o.bbnorm.log \
        | reformat.sh in=stdin.fq int=t out=$o#.fq.gz 2>/dev/null"
    echo $cmd
    eval $cmd
done
rsync -qL $tempd/reads/normalized/* $outd/reads/normalized

rm -rf $tempd/reads


######################################################################
#Merge raw reads, clean and normalize altogether
######################################################################
mkdir -p $tempd/reads/raw $tempd/reads/altogether
rsync --progress -L $outd/reads/raw/20160805.A-* raw/

ls $tempd/reads/raw/*bz2 \
    | xargs -n1 bash -c 'f=${0%[12].fastq.bz2}; echo ${f##*/}' \
    | uniq \
    | xargs -n1 bash -c 'reformat.sh in='$tempd'/reads/raw/${0}#.fastq.bz2 out='$tempd'/reads/altogether/raw.R#.fq.gz app=t' \
        2>$tempd/reads/altogether/reformat.log &
cd $tempd/reads/altogether
cmd="bbduk.sh in=raw.R#.fq.gz out=stdout.fq \
    ref=adapters \
    k=27 mink=16 ktrim=r hdist=2 tbo tpe ordered \
    2>clean.bbduk.1st.pass \
    | bbduk.sh in=stdin.fq int=t out=stdout.fq \
        ref=adapters \
        k=23 ktrim=r mink=10 hdist=1 hdist2=0 qtrim=rl trimq=10 minlen=25 tbo tpe ordered \
        2>clean.bbduk.2nd.pass \
    | bbduk.sh in=stdin.fq int=t out=clean.R#.fq.gz \
        k=31 ref=artifacts,phix ordered cardinality ow \
        2>clean.bbduk.3rd.pass"
echo $cmd
eval $cmd &

cmd="bbnorm.sh in=clean.R#.fq.gz out=stdout.fq target=100 2>norm.bbnorm.log \
        | reformat.sh in=stdin.fq int=t out=norm.R#.fq.gz 2>/dev/null"
echo $cmd
eval $cmd &
rsync -qr $tempd/reads/altogether $outd/reads/ &
######################################################################
#!!! Understand strand-specificity of libraries
######################################################################
#See these posts:
#http://seqanswers.com/forums/showpost.php?p=109498&postcount=50
#https://www.biostars.org/p/295344/
#https://www.biostars.org/p/125344/
#https://www.biostars.org/p/169942/
#https://www.biostars.org/p/64250/

#U.acus libraries generated by FGCZ were strand-specific 
#See correspondence with FGCZ (mail 21.09.2016 from Lydia Imhof)
# "Illumina_RNA Stranded mRNA library reagents_2014"

#According to RSeQC, libraries were generated by standard dUTP Illumina protocol,
#where cDNA first strand is sequenced

#See spot-check of trinity_13-1 unstranded assembly by RSeQC
#in /home/ygalachyants/axSA_assemblies/drap/trinity_13-1/RSeQC/infer_exp.log:
# # Fraction of reads failed to determine: 0.1354
# # Fraction of reads explained by "1++,1--,2+-,2-+": 0.0142
# # Fraction of reads explained by "1+-,1-+,2++,2--": 0.8504

# This means that the forward Illumina reads (R1) should be mapped to gene models as reverse-complemet sequences -- "R"
# and reverse Illumina reads (R2) should be mapped to gene models in forward orientation -- "F"

######################################################################
#!!! As of assembler and aligner settings,
#!!! these should be:
######################################################################
# # "--SS_lib_type RF" for Trinity
# # "--strand RF" for Drap
# # "--library-type fr-firststrand" for TopHat and other similar aligners
# # "--rna-strandness RF" for HiSat2
# # "--rf" for StringTie
#See https://www.biostars.org/p/64250/#95717 for instance

######################################################################
#!!! In previous assemblies and analyses ~/axSA_assemblies (StringTie, Trinity) 
#!!! The strandness was not correct !!!
#!!! These analyses should be recomputed with correct settings
######################################################################


######################################################################
#Run Drap Trinity Workflow
######################################################################
outd=/home/ygalachyants/axSA_assemblies/drap
#tempd=/store/$USER/drap
tempd=/store2/$USER/drap
mkdir -p $tempd && cd $tempd
source $HOME/tools/assembly/drap/drap.rc
s=(`ls $outd/reads/normalized/*gz | xargs -n1 bash -c 'f=${0%_R[12].fq.gz}; echo ${f##*/20160805\.A-}' | uniq | xargs`)
p=${s[7]}
cmd="runDrap  \
    --R1 $outd/reads/normalized/20160805.A-${p}_R1.fq.gz \
    --R2 $outd/reads/normalized/20160805.A-${p}_R2.fq.gz \
    --dbg trinity \
    --outdir $tempd/trinity_${p} \
    --no-norm --no-trim \
    --dbg-mem 96"
eval "$cmd &> runDrap.trinity_${p}.log" &
sleep 5 && echo "rm -rf $tempd/trinity_${p}/a-trinity/read_partitions" >> trinity_${p}/02-trinity.sh

######################################################################
#Run Drap Oases Workflow
######################################################################
s=(`ls $outd/reads/normalized/*gz | xargs -n1 bash -c 'f=${0%_R[12].fq.gz}; echo ${f##*/20160805\.A-}' | uniq | xargs`)
#for (( i=0;i<${#s[@]};i++ )); do
cmd=''
for (( i=0;i<2;i++ )); do
    p=${s[$i]}
    cmd="${cmd}runDrap  \
        --R1 $outd/reads/normalized/20160805.A-${p}_R1.fq.gz \
        --R2 $outd/reads/normalized/20160805.A-${p}_R2.fq.gz \
        --dbg oases -kmer 25,31,37,43,49 \
        --outdir $tempd/oases_${p} \
        --no-norm --no-trim \
        --dbg-mem 96"
    cmd="$cmd &> runDrap.oases_${p}.log;\n"
done
cmd=`echo -e $cmd`
echo $cmd
eval "$cmd" &

#Move oases assemblies mo one Intel-HDD node and tinity to another one
hostname
#sm118.cluster
rsync -rlu --progress sm110:/store2/ygalachyants/drap/oases_* ./
rsync -rlu --progress sm102:/store/ygalachyants/drap/oases_* ./
rsync -rlu --progress $tempd $outd
#This is to fix location of oases assemblies which were run at sm102:/store
mkdir -p /store/ygalachyants/drap
ln -sf $tempd/oases_3-[12] /store/ygalachyants/drap/
#Update synlinks at share
#find oases_* -type l | rsync -av --files-from=- $tempd $outd

hostname
#sm110.cluster
rsync -rlu --progress sm118:/store2/ygalachyants/drap/trinity_* ./
rsync -rlu --progress sm102:/store/ygalachyants/drap/trinity_* ./
#This is to fix location of oases assemblies which were run at sm102:/store
mkdir -p /store/ygalachyants/drap
ln -sf $tempd/trinity_13-1 /store/ygalachyants/drap/
ln -sf $tempd/trinity_3-3 /store/ygalachyants/drap/
#Update synlinks at share
#find trinity_* -type l | rsync -av --files-from=- $tempd $outd
rsync -rlu --progress $tempd $outd

#Fix error on oases-13-1 assembly
cmd='' && p=${s[0]}
cmd="${cmd}runDrap  \
        --R1 $outd/reads/normalized/20160805.A-${p}_R1.fq.gz \
        --R2 $outd/reads/normalized/20160805.A-${p}_R2.fq.gz \
        --dbg oases -kmer 25,31,37,43,49 \
        --outdir $tempd/oases_${p} \
        --no-norm --no-trim \
        --dbg-mem 96"
eval "$cmd &> runDrap.oases_${p}.1.log"


######################################################################
#Merge Drap Assemblies
######################################################################
dbg=trinity
all_dirs=`echo ${s[@]} | xargs -n1 printf "$tempd/${dbg}_%s," | awk '{print substr($1,1,length($1)-1)}'`
cmd="runMeta \
    -s RF \
    --drap-dirs $all_dirs \
    --outdir $tempd/metaRF_${dbg}"
eval "$cmd &> runMeta.RF.$dbg.log" &

dbg=oases
all_dirs=`echo ${s[@]} | xargs -n1 printf "$tempd/${dbg}_%s," | awk '{print substr($1,1,length($1)-1)}'`
cmd="runMeta \
    -s RF \
    --drap-dirs $all_dirs \
    --outdir $tempd/metaRF_${dbg}"
eval "$cmd &> runMeta.RF.$dbg.log" &


######################################################################
#Run Drap Trinity Workflow
######################################################################
outd=/home/ygalachyants/axSA_assemblies/drap
#tempd=/store/$USER/drap
tempd=/store2/$USER/drap
mkdir -p $tempd && cd $tempd
source $HOME/tools/assembly/drap/drap.rc
s=(`ls $outd/reads/normalized/*gz | xargs -n1 bash -c 'f=${0%_R[12].fq.gz}; echo ${f##*/20160805\.A-}' | uniq | xargs`)
cmd=''
for (( i=0;i<7;i++ )); do
    p=${s[$i]}
    cmd="${cmd}runDrap  \
        --R1 $outd/reads/normalized/20160805.A-${p}_R1.fq.gz \
        --R2 $outd/reads/normalized/20160805.A-${p}_R2.fq.gz \
        --dbg trinity \
        -s RF \
        --outdir $tempd/trinity_stranded_${p} \
        --no-norm --no-trim \
        --dbg-mem 96"
    cmd="$cmd &> runDrap.trinity_stranded_${p}.log\n"
done
echo -e $cmd | bash &
#sleep 5 && echo "rm -rf $tempd/trinity_${p}/a-trinity/read_partitions" >> trinity_${p}/02-trinity.sh

######################################################################
#Run Drap Oases Workflow with stranded switch RF
######################################################################
s=(`ls $outd/reads/normalized/*gz | xargs -n1 bash -c 'f=${0%_R[12].fq.gz}; echo ${f##*/20160805\.A-}' | uniq | xargs`)
#for (( i=0;i<${#s[@]};i++ )); do
cmd=''
for (( i=0;i<7;i++ )); do
    p=${s[$i]}
    cmd="${cmd}runDrap  \
        --R1 $outd/reads/normalized/20160805.A-${p}_R1.fq.gz \
        --R2 $outd/reads/normalized/20160805.A-${p}_R2.fq.gz \
        --dbg oases -kmer 25,31,37,43,49 \
        --s RF \
        --outdir $tempd/oases_stranded_${p} \
        --no-norm --no-trim \
        --dbg-mem 96"
    cmd="$cmd &> runDrap.oases_stranded_${p}.log\n"
done
echo -e $cmd | bash &

#Move oases assemblies mo one Intel-HDD node and tinity to another one
hostname
#sm118.cluster
rsync -rlu --progress sm110:/store2/ygalachyants/drap/oases_* ./
rsync -rlu --progress sm102:/store/ygalachyants/drap/oases_* ./
rsync -rlu --progress $tempd $outd
#This is to fix location of oases assemblies which were run at sm102:/store
mkdir -p /store/ygalachyants/drap
ln -sf $tempd/oases_3-[12] /store/ygalachyants/drap/
#Update synlinks at share
#find oases_* -type l | rsync -av --files-from=- $tempd $outd

hostname
#sm110.cluster
rsync -rlu --progress sm118:/store2/ygalachyants/drap/trinity_* ./
rsync -rlu --progress sm102:/store/ygalachyants/drap/trinity_* ./
#This is to fix location of oases assemblies which were run at sm102:/store
mkdir -p /store/ygalachyants/drap
ln -sf $tempd/trinity_13-1 /store/ygalachyants/drap/
ln -sf $tempd/trinity_3-3 /store/ygalachyants/drap/
#Update synlinks at share
#find trinity_* -type l | rsync -av --files-from=- $tempd $outd 
rsync -rlu --progress $tempd $outd

#Fix error on oases-13-1 assembly
cmd='' && p=${s[0]}
cmd="${cmd}runDrap  \
        --R1 $outd/reads/normalized/20160805.A-${p}_R1.fq.gz \
        --R2 $outd/reads/normalized/20160805.A-${p}_R2.fq.gz \
        --dbg oases -kmer 25,31,37,43,49 \
        --outdir $tempd/oases_${p} \
        --no-norm --no-trim \
        --dbg-mem 96"
eval "$cmd &> runDrap.oases_${p}.1.log"


######################################################################
#Merge Drap Assemblies
######################################################################
dbg=trinity
all_dirs=`echo ${s[@]} | xargs -n1 printf "$tempd/${dbg}_%s," | awk '{print substr($1,1,length($1)-1)}'`
cmd="runMeta \
    -s RF \
    --drap-dirs $all_dirs \
    --outdir $tempd/metaRF_${dbg}"
eval "$cmd &> runMeta.RF.$dbg.log" &

dbg=oases
all_dirs=`echo ${s[@]} | xargs -n1 printf "$tempd/${dbg}_%s," | awk '{print substr($1,1,length($1)-1)}'`
cmd="runMeta \
    -s RF \
    --drap-dirs $all_dirs \
    --outdir $tempd/metaRF_${dbg}"
eval "$cmd &> runMeta.RF.$dbg.log" &



######################################################################
#It seems, Trinity meta-assembly is better than Oases
#From altogether assemblies, trinity is MUCH better than Oases
#See TRANSRATE ASSEMBLY SCORE overall statistics and other figures
######################################################################
cd $outd/stranded
grep -B40 'p good contigs' metaRF_*/00-META-ASSEMBLY_RATING  | less
grep -B40 'p good contigs' *norm_altogether/00-ASSEMBLY_RATING  |less
grep -A5 'TRANSRATE ASSEMBLY SCORE' metaRF_*/00-META-ASSEMBLY_RATING  | less
grep -A5 'TRANSRATE ASSEMBLY SCORE' *norm_altogether/00-ASSEMBLY_RATING
######################################################################
#Compare merged trinity assembly with altogether
######################################################################

bdir=/home/ygalachyants/tools/annotation/busco
pyt=/share/apps/python/3.6.4/bin/python3
for d in trinity_norm_altogether metaRF_trinity; do
    for bdb in eukaryota_odb9 protists_ensembl; do
        bdb_p=$(echo $bdb | cut -d'_' -f1)
        cmd="$pyt $bdir/scripts/run_BUSCO.py \
            -i $outd/stranded/$d/transcripts_fpkm_1.fa \
            -m transcriptome \
            -o busco_${bdb_p}_${d} \
            -l $bdir/$bdb \
            -t ./tmp_${bdb_p}_$d \
            -c 9 -f > busco.${bdb_p}_${d}.log 2>&1 &"
        eval $cmd
    done
done
rm -rf tmp_*
grep -A2 'Results:' busco.*.log
cp -r run_busco_* busco.*.log $outd/stranded/

as=oases
outd=/home/ygalachyants/axSA_assemblies/drap/stranded
for d in ${as}_norm_altogether metaRF_${as}; do
    for bdb in eukaryota_odb9 protists_ensembl; do
        bdb_p=$(echo $bdb | cut -d'_' -f1)
        cmd="${bdir}/scripts/run_BUSCO.py \
            -i $outd/$d/transcripts_fpkm_1.fa \
            -m transcriptome \
            -o busco_${bdb_p}_${d} \
            -l $bdir/$bdb \
            -t ./tmp_${bdb_p}_$d \
            -c 9 -f > busco.${bdb_p}_${d}.log 2>&1 &"
        eval "$cmd"
        #echo "$cmd"
    done
done

######################################################################
#Run Assessment between trinity assemblies
######################################################################
ln -s transcripts_fpkm_1.fa /home/ygalachyants/axSA_assemblies/drap/stranded/metaRF_trinity/metaRF_trinity_fpkm_1.fa 
ln -s transcripts_fpkm_1.fa /home/ygalachyants/axSA_assemblies/drap/stranded/trinity_norm_altogether/trinity_norm_altogether_fpkm_1.fa

cmd="runAssessment \
    --assemblies $outd/stranded/metaRF_trinity/metaRF_trinity_fpkm_1.fa,$outd/stranded/trinity_norm_altogether/trinity_norm_altogether_fpkm_1.fa \
    --R1 $tempd/reads/altogether/norm.R1.fq.gz \
    --R2 $tempd/reads/altogether/norm.R2.fq.gz \
    --busco-lineage eukaryota_odb9 \
    --outdir $tempd/trinity_assessment"
eval "$cmd &> runAssessment.trinity.log" &
#To restart assessment after failure, run eval again once error is fixed

