#export SIGNALP=$HOME/tools/annotation/signalp-4.1
#export PATH=$HOME/tools/annotation/signalp-4.1:$PATH
#export PATH=$HOME/tools/annotation/rnammer:$PATH
export PATH=$HOME/tools/annotation/tmhmm-2.0c/bin:$PATH

signalp=$HOME/tools/annotation/signalp-4.1/signalp
rnammer=$HOME/tools/annotation/rnammer/rnammer
tmhmm=$HOME/tools/annotation/tmhmm-2.0c/bin/tmhmm

trinotate_dir=$HOME/tools/annotation/Trinotate-v3.1.1

$trinotate_dir/admin/Build_Trinotate_Boilerplate_SQLite_db.pl Trinotate no_cleanup_flag

outd=/home/ygalachyants/axSA_assemblies/drap/stranded/trinity_norm_altogether
tempd=/store/$USER

##############################################################################################
# Run Transdecoder with DRAP assembly
##############################################################################################
TD=/home/ygalachyants/tools/annotation/TransDecoder-v5.0.2

$TD/TransDecoder.LongOrfs -t ./transcripts.fa -S &> TD.longorfs.log &
$TD/TransDecoder.Predict -t ./transcripts.fa &> TD.predict.log &
prename 's/^/no_hits./' transcripts.fa.transdecoder.*

d=$outd/trinotate/transcripts.fa.transdecoder_dir
if [[ ! -d $d/splits ]]; then \
    mkdir -p $d/splits && cd $d/splits; \
    cat ../longest_orfs.pep | awk '{if($1~/^>/){printf("\n%s\n",$1)}else{printf("%s",$1)}}' | sed 1d | sed 's/*$//' | split -d -a 3 -l 500 -; \
    cd ..; \
fi
find splits -type f -name x??? | xargs -P36 -n1 bash -c 'hmmscan --cpu 1 --domtblout ${0}.pfam.out '$tempd'/Pfam-A.hmm ${0} &> ${0}.pfam.log' &
(cat splits/x000.pfam.out | grep '^#'; cat splits/x???.pfam.out | grep -v '^#') > pfam.hits.out

t=$(stat ./transcripts.fa.transdecoder_dir.__checkpoints/orf_select.ok | grep Modify | cut -d' ' -f3 | cut -d'.' -f1)
find ./transcripts.fa.transdecoder_dir.__checkpoints/ -type f -newermt $t -exec rm {} \;
$TD/TransDecoder.Predict --retain_pfam_hits $d/pfam.hits.out -t ./transcripts.fa &> TD.predict.pfam.log &
prename 's/^/pfam_hits./' transcripts.fa.transdecoder.*

db=uniprot_sprot
find splits -type f -name x??? | xargs -P36 -n1 bash -c '\
    blastp -query $0 -db '$trinotate_dir/$db' -num_threads 1 -max_target_seqs 1 -outfmt 6 > $0.blastp.out 2>/dev/null' &
cat splits/x???.blastp.out > blastp.hits.out

t=$(stat ./transcripts.fa.transdecoder_dir.__checkpoints/orf_select.ok | grep Modify | cut -d' ' -f3 | cut -d'.' -f1)
find ./transcripts.fa.transdecoder_dir.__checkpoints/ -type f -newermt $t -exec rm {} \;
$TD/TransDecoder.Predict --retain_pfam_hits $d/pfam.hits.out --retain_blastp_hits $d/blastp.hits.out -t ./transcripts.fa &> TD.predict.pfam_blast.log &
prename 's/^/pfam_blastp_hits./' transcripts.fa.transdecoder.*

echo no pfam pfam_blastp \
    | xargs -n1 bash -c 'l=$(cat $0_hits.transcripts.fa.transdecoder.pep | grep -v ">" | tr -d "\n" | wc -c); echo "$l -- length of $0 hits TD"' \
&& echo no pfam pfam_blastp \
    | xargs -n1 bash -c 'c=$(cat $0_hits.transcripts.fa.transdecoder.pep | grep ">" | cut -d" " -f1 | cut -c2- | wc -l); echo "$c -- count of $0 transcripts TD"' \
&& echo no pfam pfam_blastp \
    | xargs -n1 bash -c 'c=$(cat $0_hits.transcripts.fa.transdecoder.pep | grep ">" | cut -d" " -f1 | cut -c2- | grep -v ".p1$" | wc -l); echo "$c -- count of .p2+ $0 transcripts TD"'

qfna=$outd/trinotate/transcripts.fa
qfaa=$outd/trinotate/pfam_blastp_hits.transcripts.fa.transdecoder.pep

cp $trinotate_dir/Pfam-A.hmm* $tempd
db=uniprot_sprot
makeblastdb -in $db.pep -dbtype prot

if [[ ! -d splits ]]; then \
    mkdir splits && cd splits; \
    cat $qfaa | awk '{if($1~/^>/){printf("\n%s\n",$1)}else{printf("%s",$1)}}' | sed 1d | sed 's/*$//' | split -d -a 3 -l 500 -; \
    cd ..; \
fi

if [[ ! -d splits_nt ]]; then
    mkdir splits_nt && cd splits_nt
    cat $qfna | awk '{if($1~/^>/){printf("\n%s\n",$1)}else{printf("%s",$1)}}' | sed 1d | sed 's/*$//' | split -d -a 3 -l 500 -
    cd ..
fi


find splits -type f -name x??? | head -36 | xargs -P36 -n1 bash -c 'hmmscan --cpu 1 --domtblout ${0}.pfam.out '$tempd'/Pfam-A.hmm ${0} &> ${0}.pfam.log' &
find splits -type f -name x??? | xargs -P36 -n1 bash -c \
    'blastp -query $0 -db '$trinotate_dir/$db' -num_threads 1 -max_target_seqs 1 -outfmt 6 > $0.blastp.out 2>/dev/null' &
find splits_nt -type f -name x??? | xargs -P36 -n1 bash -c \
    'blastx -query $0 -db '$trinotate_dir/$db' -num_threads 1 -max_target_seqs 1 -outfmt 6 > $0.blastx.out 2> /dev/null' &



##############################################################################################
# Blast jobs are faster to run through queue system
# These commands are to submit jobs to queue
##############################################################################################
cd /home/ygalachyants/axSA_assemblies/drap/stranded/trinity_norm_altogether/trinotate
$db=/home/ygalachyants/tools/annotation/Trinotate-v3.1.1/uniprot_sprot
#find splits -type f -name x??? | xargs -P36 -n1 bash -c 'hmmscan --cpu 1 --domtblout ${0}.pfam.out '$tempd'/Pfam-A.hmm ${0} &> ${0}.pfam.log' &
find splits -type f -name x??? \
    | xargs -n1 bash -c 'echo "blastp -query $0 -db "'$db'" -num_threads 4 -max_target_seqs 1 -outfmt 6 > $0.blastp.out 2>/dev/null"' \
    | split -l 9 -d
ls x?? \
    | xargs -n1 -I % echo 'cd $PBS_O_WORKDIR; cat '%' | xargs -P 9 -L 1 -I CMD bash -c CMD' \
    | qsub.intel -l nodes=1:ppn=36 -N blast -V
#Similarly for BLASTX but with more nodes to increase speed

#db=$HOME/tools/annotation/Trinotate-v3.1.1/uniprot_sprot.tar.bz2
db=/home/ygalachyants/repo/NCBI/2016_Nov/nr.tar.bz2
seq -f 'x%03g' 0 22 \
    | xargs -n1 -I FILE echo 'cd \\$PBS_O_WORKDIR; prepare_db.sh '$db'; blastp -query splits/FILE -db /store/ygalachyants/nr/nr -num_threads 36 -max_target_seqs 100 -evalue 1e-5 -outfmt 11 2> splitsl/FILE.blastp.log | gzip > splits/FILE.nr.blastp.asn.gz cat; rm -rf /store/ygalachyants' \
    | xargs -L1 -I CMD bash -c 'echo "CMD" | /share/system/torque/master/bin/qsub -q reserve -l nodes=1:ppn=36 -N pfam -V; sleep 5'

export LD_LIBRARY_PATH=/share/apps/gcc/7.3/lib64:$LD_LIBRARY_PATH
seq -f 'x%03g' 1 2 \
    | xargs -n1 -I FILE echo 'set -vex; cd \\$PBS_O_WORKDIR; prepare_db.sh '$db'; blastp -query splits/FILE -db /store/ygalachyants/nr/nr -num_threads 36 -max_target_seqs 100 -evalue 1e-5 -outfmt 11 2> splits/FILE.blastp.log | gzip > splits/FILE.nr.blastp.asn.gz; rm -rf /store/ygalachyants' \
    | xargs -L1 -I CMD bash -c 'echo "CMD" | /share/system/torque/master/bin/qsub -q reserve -l nodes=1:ppn=36 -N NR.blastp -V; sleep 300'

#blastx 1000 sequences against nr takes ~12-16 walltime hours at intel 36-core node
spld=splits_nt
bprog=blastx
seq -f 'x%03g' 0 2 \
    | xargs -n1 -I FILE echo 'set -vex; cd \\$PBS_O_WORKDIR; prepare_db.sh '$db'; '$bprog' -query '$spld'/FILE -db /store/ygalachyants/nr/nr -num_threads 36 -max_target_seqs 100 -evalue 1e-5 -outfmt 11 2> '$spld'/FILE.'$bprog'.log | gzip > '$spld'/FILE.nr.'$bprog'.asn.gz; rm -rf /store/ygalachyants' \
    | xargs -L1 -I CMD bash -c 'echo "CMD" | /share/system/torque/master/bin/qsub -q reserve -l nodes=1:ppn=36 -N NR.'$bprog' -V; sleep 300'

#On allocated node:
db=/home/ygalachyants/repo/NCBI/2016_Nov/nr.tar.bz2
outd=/home/ygalachyants/axSA_assemblies/drap/stranded/trinity_norm_altogether
tempd=/store/$USER
prepare_db.sh $db &> prepare_db.log &
cd $tempd
mkdir nr_res && cd nr_res 
cp $outd/trinotate/splits/x???.nr.blastp.asn.gz ./
cp $outd/trinotate/splits_nt/x???.nr.blastx.asn.gz ./
ls x???*gz | xargs -P36 -n1 -I% gzip -d %
seq -f 'x%03g' 0 22 | xargs -P36 -n1 bash -c 'blast_formatter -archive ${0}.nr.blastp.asn -outfmt 6 -max_target_seqs 1 > ${0}.nr.blastp.out' &
seq -f 'x%03g' 0 28 | xargs -P36 -n1 bash -c 'blast_formatter -archive ${0}.nr.blastx.asn -outfmt 6 -max_target_seqs 1 > ${0}.nr.blastx.out' &
cat x???.nr.blastp.out > trinotate.nr.blastp.out
cat x???.nr.blastx.out > trinotate.nr.blastx.out
cp trinotate.nr.blast?.out $outd/trinotate

cat splits_nt/x???.blastx.out > trinotate.blastx.out
cat splits/x???.blastp.out > trinotate.blastp.out
cat splits/x???.pfam.out > trinotate.pfam.out
rm -rf splits

# diamond=$HOME/tools/meta/diamond/diamond
# $diamond makedb --in $trinotate_dir/$db.pep -d $db &> $db.diamond.makedb.log
# 
# cmd="$diamond blastp -b 20 -k1 -e 1e-5 --sensitive --outfmt 6 -p 16\
#     -t $tempd \
#     -q $qfaa \
#     -o $outd/trinotate/diamond.blastp.outfmt6 \
#     -d $trinotate_dir/$db &> $outd/trinotate/diamond.blastp.$db.log &"
# eval $cmd
# cmd="$diamond blastx -b 20 -k1 -e 1e-5 --sensitive --outfmt 6 -p 16\
#     -t $tempd \
#     -q $qfna \
#     -o $outd/trinotate/diamond.blastx.outfmt6 \
#     -d $trinotate_dir/$db &> $outd/trinotate/diamond.blastx.$db.log &"
# eval $cmd

##############################################################################################
#Generate gene_trans_map file
##############################################################################################
# This is to treat initial contig ids (from Trinity and TGICL/CAP3) as genes
# To get gene ids, simply remove one last suffix from TCL/CAP3 contigs and two last ones from Trinity contigs
# Deprecated
##############################################################################################

# cat $qfna \
#     | grep  '>' \
#     | cut -d' ' -f1 \
#     | cut -c2- 
#     | awk -vFS='_' '{if(NF==2){print $1 "\t"$1 FS $2}else{c=$1;for(i=2;i<(NF-1);i++){c=c FS $i};print c "\t" c FS $(NF-1) FS $NF}}' > tmp.map
# mv tmp.map transcripts.gene2tr.map

##############################################################################################
# This is to treat each resulted DRAP contig as unitig having single isoform
# Seems to be more appplicable for SA-RNAseq case as:
#!!! By using pfam and blastp hits with TD, number of ORFs per gene become 1. 
#!!! No contigs are now with multiple ORFS.
#!!!   This fact is in accordance with DRAP-algorithm as DRAP is designed to decrease redundancy 
#!!!   and generate assemblies with 1:1 gene-to-transcripts relationship.
#!!!   See https://peerj.com/articles/2988/#p-11 for details.
##############################################################################################

cat $qfna \
    | grep  '>' \
    | cut -d' ' -f1 \
    | cut -c2- \
    | awk '{print $1 "\t" $1}' > tmp.map 
mv tmp.map transcripts.gene2tr.map


join <(cat transcripts.gene2tr.map | sort -k1,1b) <(cat transcripts.fa | awk '{if(/>/){printf("\n%s\t",$1)}else{printf("%s",$1)}}' | cut -c2- | sort -k1,1b) | head

$signalp -f short -n signalp.out $qfaa &> signalp.log &
$tmhmm --short < $qfaa > tmhmm.out 2> tmhmm.log &
$trinotate_dir/util/rnammer_support/RnammerTranscriptome.pl --transcriptome $qfna --path_to_rnammer $rnammer &>rnammer.log &

cp -f $trinotate_dir/Trinotate.sqlite $tempd && chmod u+w $tempd/Trinotate.sqlite

$trinotate_dir/Trinotate $tempd/Trinotate.sqlite init --gene_trans_map transcripts.gene2tr.map --transcript_fasta $qfna --transdecoder_pep $qfaa
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_swissprot_blastp trinotate.blastp.out
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_swissprot_blastx trinotate.blastx.out
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_pfam trinotate.pfam.out
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_tmhmm tmhmm.out
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_signalp signalp.out
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_rnammer transcripts.fa.rnammer.gff
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_custom_blast --outfmt6 trinotate.nr.blastp.out --prog blastp --dbtype nr
$trinotate_dir/Trinotate $tempd/Trinotate.sqlite LOAD_custom_blast --outfmt6 trinotate.nr.blastx.out --prog blastx --dbtype nr

$trinotate_dir/Trinotate $tempd/Trinotate.sqlite report --incl_pep --incl_trans > trinotate.annotation_report.csv

#Format of trinotate.annotation_report.csv
#Each line has 16 fields separated by tab
# 1         #gene_id
# 2         transcript_id
# 3         sprot_Top_BLASTX_hit
# 4         RNAMMER
# 5         prot_id
# 6         prot_coords
# 7         sprot_Top_BLASTP_hit
# 8         Pfam
# 9         SignalP
# 10        TmHMM
# 11        eggnog
# 12        Kegg
# 13        gene_ontology_blast
# 14        gene_ontology_pfam
# 15        transcript
# 16        peptide

#View this by the following command to have fileds separated by newlines and enumerated
cat ../trinotate.annotation_report.csv | sed 's/\t/\n\t/g' | awk '{if(NR%16==0){n=16}else{n=NR%16} print n " " $0}' | less
cat ../trinotate.annotation_report.csv | sed 's/\t/\n\t/g' | awk -vnf=16 '{if(NR%nf==0){n=nf}else{n=NR%nf} print n " " $0}' | less

#Get genes associated with silicon transport
cat trinotate.annotation_report.csv | perl -ne 'chomp; split("\t"); @text=@_[2,6,7,12,13]; @a = map {/silic/i} @text; print join("\t",@_,"\n") if @a' > sit.annot.csv
cat sit.annot.csv | awk -vFS='\t' '{print ">" $1 " " $6 " blastGO|" $13 " pfamGO|" $14 "\n" $15}' > sit.transcripts.fa
cat sit.annot.csv | awk -vFS='\t' '{print ">" $5 "\n" $16}' > sit.peptides.fa

$trinotate_dir/util/Trinotate_get_feature_name_encoding_attributes.pl trinotate.annotation_report.csv > trinotate.annot_feature_map.txt
$trinotate_dir/util/extract_GO_assignments_from_Trinotate_xls.pl --Trinotate_xls trinotate.annotation_report.csv -G --include_ancestral_terms > trinotate.go_annotations.txt
$trinotate_dir/Analysis/DifferentialExpression/run_GOseq.pl --factor_labeling  factor_labeling.txt --GO_assignments go_annotations.txt --lengths gene.lengths.txt

##############################################################################################
# Explore annotated genes
##############################################################################################
#Annotated contigs! Do not account for SignalP and TmHMM hits!!!
cat ../trinotate.annot_feature_map.txt | sed 's/\^Tm[0-9]\+//;s/\^sigP//' | awk 'length($1)!=length($2)' | wc -l
# 15714

# TD peptides with hits in one of blastx #3, blastp#7 or pfam #8 analyses
#There are 1516 TD peptides that were not annotated; The rest 14198 were annotated
cat ../trinotate.annotation_report.csv | sed 1d | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!="."){print $5}' | sort | uniq | wc -l
# 14198

#Out of these 1516 contigs, there is a subset of contigs with long ORFs and highly significant blastx hits in uniprot
#These are contigs where TD failed to find ORF during the first scan (LongOrfs), mainly because these ORFs lack start codon.
#This question requires additional elaboation.
#For instance, 406 contigs have blastx UniProt_sprot hits with e-value below 1e-40, located at contig' sense strand and alignment-mismatch length > 70 Blastx hits for these contigs are:
join -t$'\t' \
    <(cat ../trinotate.blastx.out | sort -k1,1b) \
    <(cat ../trinotate.annotation_report.csv \
        | sed 1d \
        | awk -F'\t' '$5=="." && ($3!="." || $7!="." || $8!="."){print $1}' \
        | sort) \
    | awk '$11<=1e-40 && $7<$8 && $4-$5>=70' | less # cut -f1 | sort | uniq | wc -l

#for instance, CL1024 and CL1397 -- are most likely expressed as ORFs
#There are likely non-canonical initiation codons for ORFs in these contigs.


#Out of 14198 ORFs annotated by Trinotate as proteins, there are 11056 ORFs that have highly-significant (e-value below  1e-10, query coverage per subject above 70%) matches with sequences of filtered gene models of Thaps3 and Phatr2 genomes.
cat splits/x???.vs_diatoms_proteins.blastp.out | awk '$11<=1e-10 && $13>70 {print $1}' | sort | uniq | wc -l 
# 11056
# Their annotation:
join -t $'\t' -1 1 -2 5 <(cat splits/x???.vs_diatoms_proteins.blastp.out | awk '$11<=1e-10 && $13>70 {print $1}' | sort | uniq) <(cat ../trinotate.annotation_report.csv | sed 1d | awk -F'\t' '$5!="."') | less

# Annotated transcriptome ORFs are mostly in agreement with draft genome assembly of S.acus [...]. At nucleotide sequence level, 10550 out of 14198 protein-coding transcriptome contigs have good blastn matches (e-value below 1e-50, query coverage per subject above 90%) with scaffolds  from S.acus draft genome. Similarly, out of 14198 annotated amino-acid sequences, 11120 have tblastn matches (the same settings as above) against S.acus genome scaffolds. Discrepancies between S.acus genome and transcriptome sequences most likely arise in genome regions representings 'polyploid' part of the genome [assembly of F.cylindrus paper]. These inconsistencies can hardly be resolved without additional sequencing effort and reassembly if S.acus genome. Meanwhile, there are 7172 sequences in S.acus transcriptome having good matches against both S.acus draft genome and filtered gene models of T.pseudonana and P.tricornutum. In this article we will focus on properties and analyses of transciptome assembly of S.acus without taking into account the genome context.
#See article -- there were edits compairing with tis text!!!

comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!="."){print $1}' | sort | uniq) <(cat transcripts_vs_sac_scaffolds.blastn.out | awk '$11<=1e-50 && $13>=90 {print $1}' | sort | uniq) | wc -l
# 10550
comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!="."){print $1}' | sort | uniq) <(cat splits/x???.vs_sac_scaffolds.tblastn.out | awk '$11<=1e-50 && $13>=90 {print substr($1,1,length($1)-3)}' | sort | uniq) | wc -l
# 11120

comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d| grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '{print $1}' | sort | uniq) <(cat transcripts_vs_sac_scaffolds.blastn.out | awk '$11<=1e-50 && $13>=90 {print $1}' | sort | uniq) | wc -l
#21132
comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d| grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." {print $1}' | sort | uniq) <(cat transcripts_vs_sac_scaffolds.blastn.out | awk '$11<=1e-50 && $13>=90 {print $1}' | sort | uniq) | wc -l
#17629
comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." {print $1}' | sort | uniq) <(cat splits/x???.vs_sac_scaffolds.tblastn.out | awk '$11<=1e-50 && $13>=90 {print substr($1,1,length($1)-3)}' | sort | uniq) | wc -l
#17848
cat ../trinotate.annotation_report.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!=".")' | wc -l
#13526
comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!=".") {print $1}' | sort | uniq) <(cat splits/x???.vs_sac_scaffolds.blastp.out | awk '$11<=1e-50 && $13>=90 {print substr($1,1,length($1)-3)}' | sort | uniq) | wc -l
#11053

comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." {print $1}') <(cat splits/x???.vs_diatoms_proteins.blastp.out | awk '$11<=1e-10 && $13>=70 {print substr($1,1,length($1)-3)}' | sort | uniq) | wc -l
#10966
comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!="."){print $1}') <(cat splits/x???.vs_diatoms_proteins.blastp.out | awk '$11<=1e-10 && $13>=70 {print substr($1,1,length($1)-3)}' | sort | uniq) | wc -l
#8563
comm -1 -2 <(comm -1 -2 <(cat ../trinotate.annotation_report.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." && ($3!="." || $7!="." || $8!="."){print $1}' | sort | uniq) <(cat splits/x???.vs_sac_scaffolds.tblastn.out | awk '$11<=1e-50 && $13>=90 {print substr($1,1,length($1)-3)}' | sort | uniq)) <(cat splits/x???.vs_diatoms_proteins.blastp.out | awk '$11<=1e-10 && $13>=70 {print substr($1,1,length($1)-3)}' | sort | uniq) | wc -l
# 7172

#Number of ORFs 
#with no annotatin either
cat ../trinotate.annotation_report.nr.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." && $15=="." && $16=="."' | wc -l
#10661
#with no annotation and no hits in UniProt/Swissprot/Pfam but having hits against NR
cat ../trinotate.annotation_report.nr.csv | sed 1d | grep -vf ../filter_primates/primate.contig.ids | awk -F'\t' '$5!="." && $15=="." && $16=="." && ($3=="." || $7=="." || $10==".") && ($8!="." || $9!=".")' | wc -l
#7272


grep -f <(cat thaps3.light_sensing.ids | cut -f1 | sed 's/^/jgi\|Thaps3\|/') splits/x???.vs_diatoms_proteins.blastp.out

#Select Ex95 contigs with proteins for OrthoMCL clustering
#!!! See ../abundance_estimation folder for details
#There are 11102 such ORFs in total
cat ../abundance_estimation/salmon.isoform.TMM.EXPR.matrix.E-inputs | sed 1d | awk '$1<=95{print $2}' | wc -l
# 12446
join \
    <(cat ../abundance_estimation/salmon.isoform.TMM.EXPR.matrix.E-inputs \
        | sed 1d \
        | awk '$1<=95{print $2}' \
        | sort) \
    <(cat trinotate.annotation_report.csv \
        | sed 1d \
        | awk -F'\t' '$5!="."{print $1 "\t" $16}' \
        | sort -k1,1) \
    | awk '{print ">" $1 "\n" $2}' > trinotate.Ex95.faa

cat trinotate.Ex95.faa | grep '>' | wc -l
# 11102

# Out of 12446 Ex95 contigs, there are 11102 protein-coding contigs and 1344 contigs without ORFs. Among the protein-coding S.acus genes, 8125 are homologous (have orthology/outparalogy relationship) to Phatr2 or Thaps3 genes.
#!!! See ../porthoMCL folder for details



##############################################################################################
# Run IPS on TR pep file
##############################################################################################
if [[ ! -d splits ]]; then \
    mkdir splits && cd splits; \
    cat $qfaa | awk '{if($1~/^>/){printf("\n%s\n",$1)}else{printf("%s",$1)}}' | sed 1d | sed 's/*$//' | split -d -a 3 -l 2000 -; \
    cd ..; \
fi
ips=/home/ygalachyants/tools/annotation/interproscan-5.21-60.0
#cp -f $ips/interproscan.properties.mutlipleCPU.sharedFS $ips/interproscan.properties

appl='COILS,PRINTS,ProDom,SFLD,SMART,SignalP,TMHMM,Phobius,ProSitePatterns'
#CDD,Gene3D,HAMAP,Pfam,TIGRFAM,PIRSF,Superfamily
#I would recommend CDD, Gene3D and Pfam
appldb="CDD,Gene3D,HAMAP,Pfam,TIGRFAM,PIRSF,Superfamily"
iprlookup="-iprlookup -goterms -pa"
export tempd=/store/$USER/data
export PATH=/share/apps/python/2.7.2/bin:$PATH

s=$(find splits -type f -name x??? | sed '1d' | wc -l) && cmd='' && for i in `seq -f '%03g' 0 $s`; do
    d=$(date '+%Y%m%d_%H%M%S')
    cmd="$ips/interproscan.sh $iprlookup -f HTML,TSV,XML,GFF3,SVG -i ./splits/x${i} -d ./splits -t p -appl ${appl},${appldb} &> ./splits/${i}.${d}.IPS.log \n"$cmd
done
echo -e $cmd | xargs -L1 -P2 -I CMD bash -c CMD &












